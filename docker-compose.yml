version: '3.8'

services:
  # Shadowsocks Proxy Server
  proxy:
    build:
      context: shadowsocks-proxy
      dockerfile: shadowsocks-proxy/Dockerfile
    container_name: shadowsocks-proxy
    restart: always
    stop_grace_period: 30s
    ports:
      - "1080:1080"
    environment:
      # Redis connection
      - REDIS_URL=redis://:YOUR_REDIS_PASSWORD@redis:6379
      # Proxy configuration
      - PROXY_HOST=0.0.0.0
      - PROXY_PORT=1080
      - PROXY_PROTOCOL=shadowsocks
      # Shadowsocks master secret for password generation
      - SS_MASTER_SECRET=YOUR_MASTER_SECRET_HERE
      - SS_METHOD=chacha20-ietf-poly1305
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./domains.json:/app/domains.json:ro
    networks:
      - proxy-network
    # Security: read-only filesystem
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,nodev,size=100m
    # TCP optimization
    sysctls:
      - net.ipv4.tcp_keepalive_time=600
      - net.ipv4.tcp_keepalive_intvl=60
      - net.ipv4.tcp_keepalive_probes=3
      - net.core.somaxconn=1024
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import redis, os; r=redis.Redis.from_url(os.getenv('REDIS_URL'), decode_responses=True); r.ping()"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # Capabilities
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    security_opt:
      - no-new-privileges:true
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: local
      options:
        max-size: "10m"
        max-file: "2"

  # Redis Database
  redis:
    image: redis:7-alpine
    container_name: proxy-redis
    ports:
      - "127.0.0.1:6379:6379"
    restart: always
    command: >
      redis-server
      --requirepass YOUR_REDIS_PASSWORD
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --tcp-backlog 511
      --timeout 300
      --tcp-keepalive 60
    volumes:
      - redis-data:/data
    networks:
      - proxy-network
    # Security: read-only filesystem except /data
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,nodev,size=50m
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "-a", "YOUR_REDIS_PASSWORD", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: local
      options:
        max-size: "10m"
        max-file: "2"

volumes:
  redis-data:
    driver: local

networks:
  proxy-network:
    driver: bridge
